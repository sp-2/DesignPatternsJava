
public class quickSortHoare {
	
	public static void swap(int[] items, int firstIndex, int secondIndex) {
		 int temp = items[firstIndex];
		 items[firstIndex] = items[secondIndex];
		 items[secondIndex] = temp;
	}
	
	public static int partitionHoare(int[] items, int start, int end) {
			
			int pivot = start + (end-start)/2;//Hoare partioning scheme
	
			int i = start;
			int j = end;
	
			while(i<=j) {
				while(items[i] < items[pivot]  && i<end || i==pivot) { i++;}
				while(items[j] > items[pivot] || j==pivot && j>start) { j--;}	
				
				if(i<=j) {
					swap(items, i++, j--);
				}
			}
			i=i>end?end:i;
			if(i<=pivot || (i>pivot&&items[i]<=items[pivot])) {//works but not correct on return of i,or correct but pivot is different?
				swap(items, i, pivot);
			}
	
			return i;
		}
		
	public static void quickSortHoare(int[] items, int start, int end) {
	
		if(end<=start) {return;}
		
		int pivot = partitionHoare(items, start, end);
	
		quickSortHoare(items, start, pivot-1);
		quickSortHoare(items, pivot, end);
	
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
