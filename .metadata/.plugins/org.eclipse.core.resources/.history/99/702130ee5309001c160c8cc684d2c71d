import java.lang.reflect.Constructor;

public class SIngletonWithReflection {

	public static void main(String[] args) throws Exception{
		Class singleton1 = SingletonDesignPatternEagerLoading.class;
		Class singleton2 = Class.forName("SingletonDesignPatternEagerLoading");
		SingletonDesignPatternEagerLoading s = new SingletonDesignPatternEagerLoading();
		Class singleton3 =  s.getClass();
		SingletonDesignPatternEagerLoading singleInstance11 =  Constructor.newInstance();
		SingletonDesignPatternEagerLoading singleInstance = SingletonDesignPatternEagerLoading.getInstance();
		SingletonDesignPatternEagerLoading singleInstance1 = SingletonDesignPatternEagerLoading.getInstance();

		System.out.println(singleton1.hashCode());
		System.out.println(singleton2.hashCode());
		System.out.println(singleton3.hashCode());
		System.out.println(singleInstance);
		System.out.println(singleInstance1);
	}
}